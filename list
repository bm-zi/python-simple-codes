1   -  Math Operations - Starting Chapter 1
2   -  String concatenation and replication
3   -  First Python Program - print user input
4   -  Function len() - string length
5   -  Function str()
6   -  Function str(), int(), float()
7   -  input() function
8   -  Boolean data types - Starting Chapter 2
9   -  Boolean Operators
10  -  Mixing Boolean and Comparison Operators
11  -  if,elif,else conditional
12  -  while loop
13  -  An Annoying while Loop
14  -  loop break statement
15  -  loop continue statement
16  -  empty value is considered False
17  -  for Loops and the range() Function
18  -  while loop equivalent to for loop
19  -  for loop - sum of numbers from 1 to 100
20  -  range() function examples
21  -  import modules
22  -  sys.exit() - Ending a Program Early
23  -  Function example - Starting Chapter 3 
24  -  Function with argument
25  -  return statement
26  -  None data type
27  -  Optional keywords for functions
28  -  local and global variables with same name
29  -  global variables
30  -  Exception Handling
31  -  Out Of Function Exception Handling
32  -  Guessing Game
33  -  List example - Starting Chapter 4     
34  -  List of lists
35  -  Lists negative indexes
36  -  Getting sublists with slices
37  -  Getting a list’s length with len()
38  -  Changing values in a list with indexes
39  -  List concatenation and list replication
40  -  Removing values from lists with del
41  -  Lists as alternative of using many variables
42  -  Using for loop with lists
43  -  in and not in operators
44  -  List - using multiple assignment trick 
45  -  Augmented assignment operators
46  -  Finding a Value in a list with index() method
47  -  Adding values to lists with append() and insert()
48  -  Removing values from lists with remove() method
49  -  Sorting the values in a list with sort()
50  -  Magic 8 ball game with a list
51  -  List-like types - strings and tuples
52  -  List and strings - Mutable and immutable data types
53  -  tuple data type
54  -  References to list
55  -  Passing list references
56  -  Copy module’s copy() and deepcopy() functions for lists
57  -  Character picture grid
58  -  Dictionary Data Type - Starting Chapter 5
59  -  program to store data
60  -  Dictionary's methods: keys, values, items
61  -  Build a list from dictionary's keys
62  -  Show dictionary's keys & values by for loop
63  -  Check if key or value exists in a dictionary
64  -  Dictionary get() method
65  -  Dictionary setdefault() Method
66  -  Using setdefault to count no of chars in string
67  -  Pretty print dictionaries - using pprint module
68  -  TIC-TOC-TOE - using dictionary to model the board
69  -  Nested Dictionaries and Lists
70  -  Fantasy Game Inventory, using dictionary
71  -  List to Dictionary Function for Fantasy Game Inventory
72  -  Working with Strings - Double Quotes - Starting Chapter 6
73  -  Raw Strings and escape characters
74  -  Multiline Strings with Triple Quotes
75  -  Multiline Comments
76  -  Indexing and Slicing Strings
77  -  The in and not in Operators with Strings
78  -  String Methods: upper(), lower()
79  -  String Methods: isupper(), and islower()
80  -  The isX String Methods
81  -  isX methods helps to validate user input
82  -  startswith() and endswith() String Methods
83  -  join() and split() String Methods
84  -  split a multiline string
85  -  Justifying Text: rjust(), ljust(), and center()
86  -  Using Justifying Text for Tabular Data
87  -  Removing Whitespace with strip(), rstrip(), and lstrip()
88  -  Copy and Paste Strings with the pyperclip Module
89  -  An insecure password locker program
90  -  Adding Bullets to Wiki Markup
91  -  Finding a pattern without using RE - Starting Chapter 7
92  -  Finding pattern without RE from a string
93  -  Matching regex objects
94  -  Pattern matching with grouping
95  -  Pattern matching with grouping and escaping parantheses
96  -  Matching multiple groups with the pipe
97  -  Matching groups with the pipe as part of re
98  -  Optional matching with ?
99  -  Matching zero or more with *
100 -  Matching one or more with +
101 -  Matching specific repetitions with {}
102 -  Greedy and nongreedy matching
103 -  findall() Method
104 -  Character Classes
105 -  Making your own character classes
106 -  Caret and dollar sign characters
107 -  Wild card character
108 -  Matching everything with dot-star
109 -  Matching newlines with the dot character
110 -  Case-insensitive matching
111 -  Substituting strings with sub() method
112 -  Managing complex regexes
113 -  Combining re.IGNORECASE, re.DOTALL, and re.VERBOSE
114 -  Finds phone numbers and email addresses on the clipboard
115 -  Create strings for file names - Starting Chapter 8
116 -  The Current Working Directory
117 -  Creating New Folders with os.makedirs()
118 -  Handling Absolute and Relative Paths
119 -  Finding File Sizes and Folder Contents
120 -  Checking Path Validity
121 -  The File Reading/Writing Process
122 -  Writing to Files
123 -  Saving Variables with the shelve Module
124 -  Saving Variables with the pprint.pformat() Function
125 -  Generating Random Quiz Files
126 -  Multiclipboard
127 -  Copying files and folders - Starting Chapter 9
128 -  Moving and renaming files and folders
129 -  Permanently Deleting Files and Folders
130 -  Safe Deletes with the send2trash Module
131 -  Walk through the directory tree - os.walk
132 -  Compressing Files with the zipfile Module
133 -  Extracting from ZIP Files
134 -  Creating and Adding to ZIP Files
135 -  Renaming Files with US-Style Dates to EU-style
136 -  Backing Up a Folder into a ZIP File
137 -  Raising Exceptions - Starting Chapter 10
138 -  Getting the Traceback as a String
139 -  Assertions
140 -  Using an Assertion in a Traffic Light Simulation
141 -  Logging - Using the logging Module
142 -  Logging to a file
143 -  IDLE Debuger
144 -  Debugging Coin Toss
145 -  Launch a new browser - Starting Chapter 11
146 -  Open google map address from terminal or clipboard
147 -  Download Web Page with requests.get() Function
148 -  Checking Downloading A Web Page
149 -  Saving Downloaded Files to the Hard Drive
150 -  Parsing HTML with the BeautifulSoup Module
151 -  Creating a BeautifulSoup Object from local HTML file
152 -  Finding an Element with the select() Method
153 -  Getting Data from an Element’s Attributes
154 -  I’m Feeling Lucky - Google Search
155 -  Downloading All XKCD Comics
156 -  Starting a Selenium-Controlled Browser
157 -  Finding Elements on the Page
158 -  WebElement Attributes and Methods
159 -  Clicking the Page
160 -  Filling Out and Submitting Forms
161 -  Sending Special Keys
162 -  Opening Excel Documents with OpenPyXL - Starting Chapter 12
163 -  Getting Cells from the Sheets
164 -  excel sheet cell() method
165 -  Determine the size of the sheet
166 -  Converting Between Column Letters and Numbers
167 -  Getting Rows and Columns from the Sheets
168 -  Access the values of cells in a particular row or column
169 -  Reading Data from a Spreadsheet
170 -  Writing Excel Documents
171 -  Create and save a new excel file
172 -  Creating and Removing Sheets
173 -  Writing Values to Cells
174 -  Project: Updating a Spreadsheet
175 -  Setting the Font Style of Cells
176 -  Font object
177 -  Formula
178 -  loading workbook with data_only argument
179 -  Setting Row Height and Column Width
180 -  Merging and Unmerging Cells
181 -  Unmerge cells
182 -  Freeze Panes
183 -  Charts
184 -  Extracting Text from PDFs - Starting Chapter 13
185 -  Decrypting PDFs
186 -  copy pages from one PDF document to another
187 -  Creating PDFs
188 -  Overlaying Pages
189 -  Encrypting PDFs
190 -  Combining Select Pages from Many PDFs
191 -  Word Documents
192 -  Getting the Full Text from a .docx File
193 -  Styling Paragraph and Run Objects
194 -  Creating Word Documents with Nondefault Styles
195 -  Writing Word Documents
196 -  Add paragraphs
197 -  Adding Headings
198 -  Adding Line and Page Breaks and Adding Pictures
199 -  Reserved
200 -  Reserved
201 -  Read data from a CSV file - Starting Chapter 14
202 -  Reading Data from Reader Objects in a for Loop
203 -  Writer object
204 -  The delimeter and lineterminator keyword arguments
205 -  Project: Removing the Header from CSV Files
206 -  JSON and APIs
207 -  Reading JSON with the loads() Function
208 -  Writing JSON with the dumps() Function
209 -  Project: Fetching Current Weather Data
210 -  The time.time() Function - Starting Chapter 15
211 -  calculate running time for a program
212 -  sleep function to pause the program
213 -  Rounding the current time number
214 -  Project: Super Stopwatch - track spent time on a task
215 -  The datetime Module